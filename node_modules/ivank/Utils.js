function Point(t, e) {
    t || (t = 0),
    e || (e = 0),
    this.x = t,
    this.y = e
}
function Rectangle(t, e, i, s) {
    t || (t = 0),
    e || (e = 0),
    i || (i = 0),
    s || (s = 0),
    this.x = t,
    this.y = e,
    this.width = i,
    this.height = s
}
function Transform() {
    this._obj = null ,
    this._mdirty = !1,
    this._vdirty = !1,
    this._tmat = Point._m4.create(),
    this._imat = Point._m4.create(),
    this._atmat = Point._m4.create(),
    this._aimat = Point._m4.create(),
    this._pscal = Point._m4.create(),
    this._cmat = Point._m4.create(),
    this._cvec = Point._v4.create(),
    this._cID = !0,
    this._scaleX = 1,
    this._scaleY = 1,
    this._scaleZ = 1,
    this._rotationX = 0,
    this._rotationY = 0,
    this._rotationZ = 0
}
function EventDispatcher() {
    this.lsrs = {},
    this.cals = {}
}
function Event(t, e) {
    e || (e = !1),
    this.type = t,
    this.target = null ,
    this.currentTarget = null ,
    this.bubbles = e
}
function MouseEvent(t, e) {
    Event.call(this, t, e),
    this.movementX = 0,
    this.movementY = 0
}
function TouchEvent(t, e) {
    Event.call(this, t, e),
    this.stageX = 0,
    this.stageY = 0,
    this.touchPointID = -1
}
function KeyboardEvent(t, e) {
    Event.call(this, t, e),
    this.altKey = !1,
    this.ctrlKey = !1,
    this.shiftKey = !1,
    this.keyCode = 0,
    this.charCode = 0
}
function DisplayObject() {
    EventDispatcher.call(this),
    this.visible = !0,
    this.parent = null ,
    this.stage = null ,
    this.transform = new Transform,
    this.transform._obj = this,
    this.blendMode = BlendMode.NORMAL,
    this.x = 0,
    this.y = 0,
    this.z = 0,
    this._trect = new Rectangle,
    this._tempP = new Point,
    this._torg = Point._v4.create(),
    this._tvec4_0 = Point._v4.create(),
    this._tvec4_1 = Point._v4.create(),
    this._tempm = Point._m4.create(),
    this._atsEv = new Event(Event.ADDED_TO_STAGE),
    this._rfsEv = new Event(Event.REMOVED_FROM_STAGE),
    this._atsEv.target = this._rfsEv.target = this
}
function InteractiveObject() {
    DisplayObject.call(this),
    this.buttonMode = !1,
    this.mouseEnabled = !0,
    this.mouseChildren = !0
}
function DisplayObjectContainer() {
    InteractiveObject.call(this),
    this._tempR = new Rectangle,
    this.numChildren = 0,
    this._children = []
}
function BitmapData(t) {
    if (this.width = 0,
    this.height = 0,
    this.rect = new Rectangle,
    this.loader = new EventDispatcher,
    this.loader.bitmapData = this,
    this._rwidth = 0,
    this._rheight = 0,
    this._rrect = null ,
    this._texture = null ,
    this._tcBuffer = null ,
    this._vBuffer = null ,
    this._loaded = !1,
    this._dirty = !0,
    this._gpuAllocated = !1,
    this._buffer = null ,
    this._ubuffer = null ,
    null  != t) {
        var e = document.createElement("img");
        e.crossOrigin = "Anonymous",
        e.onload = function(t) {
            this._initFromImg(e, e.width, e.height);
            var i = new Event(Event.COMPLETE);
            this.loader.dispatchEvent(i)
        }
        .bind(this),
        e.src = t
    }
}
function Bitmap(t) {
    DisplayObject.call(this),
    this.bitmapData = t
}
function Stage(t) {
    DisplayObjectContainer.call(this),
    document.body.setAttribute("style", "margin:0; overflow:hidden");
    var e = document.createElement("meta");
    e.setAttribute("name", "viewport"),
    e.setAttribute("content", "width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0"),
    document.getElementsByTagName("head")[0].appendChild(e),
    this.stage = this,
    this.stageWidth = 0,
    this.stageHeight = 0,
    this.focus = null ,
    this._focii = [null , null , null ],
    this._mousefocus = null ,
    this._knM = !1,
    this._mstack = new Stage._MStack,
    this._cmstack = new Stage._CMStack,
    this._sprg = null ,
    this._svec4_0 = Point._v4.create(),
    this._svec4_1 = Point._v4.create(),
    this._pmat = Point._m4.create([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1]),
    this._umat = Point._m4.create([2, 0, 0, 0, 0, -2, 0, 0, 0, 0, 2, 0, -1, 1, 0, 1]),
    this._smat = Point._m4.create([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, .001, 0, 0, 0, 0, 1]),
    this._mcEvs = [new MouseEvent(MouseEvent.CLICK,!0), new MouseEvent(MouseEvent.MIDDLE_CLICK,!0), new MouseEvent(MouseEvent.RIGHT_CLICK,!0)],
    this._mdEvs = [new MouseEvent(MouseEvent.MOUSE_DOWN,!0), new MouseEvent(MouseEvent.MIDDLE_MOUSE_DOWN,!0), new MouseEvent(MouseEvent.RIGHT_MOUSE_DOWN,!0)],
    this._muEvs = [new MouseEvent(MouseEvent.MOUSE_UP,!0), new MouseEvent(MouseEvent.MIDDLE_MOUSE_UP,!0), new MouseEvent(MouseEvent.RIGHT_MOUSE_UP,!0)],
    this._smd = [!1, !1, !1],
    this._smu = [!1, !1, !1],
    this._smm = !1,
    this._srs = !1,
    this._touches = {},
    this._canvas = this.canvas = document.getElementById(t),
    Stage._main = this;
    var i = {
        alpha: !0,
        antialias: !0,
        depth: !0,
        premultipliedAlpha: !0
    }
      , s = this.canvas;
    gl = s.getContext("webgl", i),
    gl || (gl = s.getContext("experimental-webgl", i)),
    gl || alert("Could not initialize WebGL. Try to update your browser or graphic drivers."),
    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !0);
    var n = document;
    n.addEventListener("contextmenu", Stage._ctxt, !1),
    n.addEventListener("dragstart", Stage._blck, !1),
    s.addEventListener("touchstart", Stage._onTD, !1),
    s.addEventListener("touchmove", Stage._onTM, !1),
    s.addEventListener("touchend", Stage._onTU, !1),
    n.addEventListener("touchstart", Stage._blck, !1),
    s.addEventListener("touchmove", Stage._blck, !1),
    s.addEventListener("touchend", Stage._blck, !1),
    s.addEventListener("mousedown", Stage._onMD, !1),
    s.addEventListener("mousemove", Stage._onMM, !1),
    s.addEventListener("mouseup", Stage._onMU, !1),
    s.addEventListener("mousemove", Stage._blck, !1),
    s.addEventListener("mouseup", Stage._blck, !1),
    n.addEventListener("keydown", Stage._onKD, !1),
    n.addEventListener("keyup", Stage._onKU, !1),
    n.addEventListener("keydown", Stage._blck, !1),
    n.addEventListener("keyup", Stage._blck, !1),
    window.addEventListener("resize", Stage._onRS, !1),
    this._initShaders(),
    this._initBuffers(),
    gl.clearColor(0, 0, 0, 0),
    gl.enable(gl.BLEND),
    gl.blendEquation(gl.FUNC_ADD),
    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA),
    gl.enable(gl.DEPTH_TEST),
    gl.depthFunc(gl.LEQUAL),
    this._resize(),
    this._srs = !0,
    _requestAF(Stage._tick)
}
function Graphics() {
    this._conf = {
        ftype: 0,
        fbdata: null ,
        fcolor: null ,
        lwidth: 0,
        lcolor: null
    },
    this._points = [0, 0],
    this._fills = [],
    this._afills = [],
    this._lfill = null ,
    this._rect = new Rectangle(0,0,0,0),
    this._srect = new Rectangle(0,0,0,0),
    this._startNewFill()
}
function Sprite() {
    DisplayObjectContainer.call(this),
    this._trect2 = new Rectangle,
    this.graphics = new Graphics
}
function TextFormat(t, e, i, s, n, r, a) {
    this.font = t ? t : "Times New Roman",
    this.size = e ? e : 12,
    this.color = i ? i : 0,
    this.bold = s ? s : !1,
    this.italic = n ? n : !1,
    this.align = r ? r : TextFormatAlign.LEFT,
    this.leading = a ? a : 0,
    this.maxW = 0,
    this.data = {
        image: null ,
        tw: 0,
        th: 0,
        rw: 0,
        rh: 0
    }
}
function TextField() {
    InteractiveObject.call(this),
    this._tarea = document.createElement("textarea"),
    this._tareaAdded = !1,
    this._tarea.setAttribute("style", "font-family:Times New Roman; font-size:12px; z-index:-1; 											position:absolute; top:0px; left:0px; opacity:0; pointer-events:none; user-select:none; width:100px; height:100px;"),
    this._tarea.addEventListener("input", this._tfInput.bind(this), !1),
    this._stage = null ,
    this._type = "dynamic",
    this._selectable = !0,
    this._mdown = !1,
    this._curPos = -1,
    this._select = null ,
    this._metrics = null ,
    this._wordWrap = !1,
    this._textW = 0,
    this._textH = 0,
    this._areaW = 100,
    this._areaH = 100,
    this._text = "",
    this._tForm = new TextFormat,
    this._rwidth = 0,
    this._rheight = 0,
    this._background = !1,
    this._border = !1,
    this._texture = gl.createTexture(),
    this._tcArray = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]),
    this._tcBuffer = gl.createBuffer(),
    Stage._setBF(this._tcBuffer),
    gl.bufferData(gl.ARRAY_BUFFER, this._tcArray, gl.STATIC_DRAW),
    this._fArray = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
    this._vBuffer = gl.createBuffer(),
    Stage._setBF(this._vBuffer),
    gl.bufferData(gl.ARRAY_BUFFER, this._fArray, gl.STATIC_DRAW),
    this.addEventListener2(Event.ADDED_TO_STAGE, this._tfATS, this),
    this.addEventListener2(Event.REMOVED_FROM_STAGE, this._tfRFS, this),
    this.addEventListener2(MouseEvent.MOUSE_DOWN, this._tfMD, this),
    this.addEventListener2(KeyboardEvent.KEY_UP, this._tfKU, this),
    this._brect = new Rectangle
}
//old
window._requestAF = (function() {
  return window.requestAnimationFrame ||
	 window.webkitRequestAnimationFrame ||
	 window.mozRequestAnimationFrame ||
	 window.oRequestAnimationFrame ||
	 window.msRequestAnimationFrame ||
	 function(/* function FrameRequestCallback */ callback, /* DOMElement Element */ element) {
	   window.setTimeout(callback, 1000/60);
	 };
})();
